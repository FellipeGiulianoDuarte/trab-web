name: Manual Fix Database Config

on:
  workflow_dispatch:
    inputs:
      confirm_fix:
        description: 'Type "FIX" to manually replace database placeholders'
        required: true
        default: ''

permissions:
  contents: read

jobs:
  manual_fix:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_fix == 'FIX'

    steps:
      - name: Manual Database Configuration Fix
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            echo "🔧 Manual fix for database configuration..."
            
            CONFIG_FILE="/var/www/html/public/backend/db/connection.php"
            
            echo "📋 Current file content:"
            cat "$CONFIG_FILE"
            echo ""
            
            echo "🔄 Making backup..."
            cp "$CONFIG_FILE" "$CONFIG_FILE.backup"
            
            echo "🔄 Applying manual replacements..."
            
            # Use different delimiter to avoid conflicts
            sed -i "s#%%DB_HOST%%#${{ secrets.DB_HOST }}#g" "$CONFIG_FILE"
            sed -i "s#%%DB_USER_PROD%%#${{ secrets.DB_USER_PROD }}#g" "$CONFIG_FILE"
            sed -i "s#%%DB_PASSWORD_PROD%%#${{ secrets.DB_PASSWORD_PROD }}#g" "$CONFIG_FILE"
            sed -i "s#%%DB_NAME_PROD%%#${{ secrets.DB_NAME_PROD }}#g" "$CONFIG_FILE"
            
            echo "📋 Updated file content:"
            cat "$CONFIG_FILE"
            echo ""
            
            echo "🔍 Verification:"
            if grep -q "%%DB_HOST%%" "$CONFIG_FILE"; then
              echo "❌ DB_HOST placeholder still exists!"
            else
              echo "✅ DB_HOST placeholder replaced"
            fi
            
            if grep -q "%%DB_USER_PROD%%" "$CONFIG_FILE"; then
              echo "❌ DB_USER_PROD placeholder still exists!"
            else
              echo "✅ DB_USER_PROD placeholder replaced"
            fi
            
            if grep -q "%%DB_PASSWORD_PROD%%" "$CONFIG_FILE"; then
              echo "❌ DB_PASSWORD_PROD placeholder still exists!"
            else
              echo "✅ DB_PASSWORD_PROD placeholder replaced"
            fi
            
            if grep -q "%%DB_NAME_PROD%%" "$CONFIG_FILE"; then
              echo "❌ DB_NAME_PROD placeholder still exists!"
            else
              echo "✅ DB_NAME_PROD placeholder replaced"
            fi
            
            echo "🧪 Testing database connection..."
            php -r "
            include '$CONFIG_FILE';
            echo 'Connection test: ';
            try {
              if (\$conn->ping()) {
                echo 'SUCCESS - Database connected!';
              } else {
                echo 'FAILED - Could not ping database';
              }
              \$conn->close();
            } catch (Exception \$e) {
              echo 'ERROR: ' . \$e->getMessage();
            }
            "
            
            echo ""
            echo "🔄 Restarting Apache..."
            sudo systemctl restart apache2
            
            echo "✅ Manual fix completed!"
